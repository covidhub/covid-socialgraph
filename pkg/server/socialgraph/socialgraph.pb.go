// Code generated by protoc-gen-go. DO NOT EDIT.
// source: socialgraph.proto

package socialgraph

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Infection_Type int32

const (
	Infection_CONTACT       Infection_Type = 0
	Infection_CLOSE_CONTACT Infection_Type = 1
	Infection_INDIRECT      Infection_Type = 2
)

var Infection_Type_name = map[int32]string{
	0: "CONTACT",
	1: "CLOSE_CONTACT",
	2: "INDIRECT",
}

var Infection_Type_value = map[string]int32{
	"CONTACT":       0,
	"CLOSE_CONTACT": 1,
	"INDIRECT":      2,
}

func (x Infection_Type) String() string {
	return proto.EnumName(Infection_Type_name, int32(x))
}

func (Infection_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_152e2e228b8d834b, []int{2, 0}
}

type Recommendation_RiskLevel int32

const (
	Recommendation_LOW    Recommendation_RiskLevel = 0
	Recommendation_MEDIUM Recommendation_RiskLevel = 1
	Recommendation_HIGH   Recommendation_RiskLevel = 2
)

var Recommendation_RiskLevel_name = map[int32]string{
	0: "LOW",
	1: "MEDIUM",
	2: "HIGH",
}

var Recommendation_RiskLevel_value = map[string]int32{
	"LOW":    0,
	"MEDIUM": 1,
	"HIGH":   2,
}

func (x Recommendation_RiskLevel) String() string {
	return proto.EnumName(Recommendation_RiskLevel_name, int32(x))
}

func (Recommendation_RiskLevel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_152e2e228b8d834b, []int{3, 0}
}

type Profile_AgeGroup int32

const (
	Profile_CHILD                Profile_AgeGroup = 0
	Profile_TEENAGER             Profile_AgeGroup = 1
	Profile_YOUNG_ADULT_TWENTIES Profile_AgeGroup = 2
	Profile_YOUNG_ADULT_THIRTIES Profile_AgeGroup = 3
	Profile_MIDDLE_AGED_FOURTIES Profile_AgeGroup = 4
	Profile_MIDDLE_AGED_FIFTIES  Profile_AgeGroup = 5
	Profile_SENIOR               Profile_AgeGroup = 6
)

var Profile_AgeGroup_name = map[int32]string{
	0: "CHILD",
	1: "TEENAGER",
	2: "YOUNG_ADULT_TWENTIES",
	3: "YOUNG_ADULT_THIRTIES",
	4: "MIDDLE_AGED_FOURTIES",
	5: "MIDDLE_AGED_FIFTIES",
	6: "SENIOR",
}

var Profile_AgeGroup_value = map[string]int32{
	"CHILD":                0,
	"TEENAGER":             1,
	"YOUNG_ADULT_TWENTIES": 2,
	"YOUNG_ADULT_THIRTIES": 3,
	"MIDDLE_AGED_FOURTIES": 4,
	"MIDDLE_AGED_FIFTIES":  5,
	"SENIOR":               6,
}

func (x Profile_AgeGroup) String() string {
	return proto.EnumName(Profile_AgeGroup_name, int32(x))
}

func (Profile_AgeGroup) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_152e2e228b8d834b, []int{5, 0}
}

type Profile_CovidStatus int32

const (
	Profile_NOT_INFECTED Profile_CovidStatus = 0
	Profile_INFECTED     Profile_CovidStatus = 1
	Profile_RECOVERD     Profile_CovidStatus = 2
)

var Profile_CovidStatus_name = map[int32]string{
	0: "NOT_INFECTED",
	1: "INFECTED",
	2: "RECOVERD",
}

var Profile_CovidStatus_value = map[string]int32{
	"NOT_INFECTED": 0,
	"INFECTED":     1,
	"RECOVERD":     2,
}

func (x Profile_CovidStatus) String() string {
	return proto.EnumName(Profile_CovidStatus_name, int32(x))
}

func (Profile_CovidStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_152e2e228b8d834b, []int{5, 1}
}

type Profile_MedicalConditions int32

const (
	Profile_HEART_DISEASE       Profile_MedicalConditions = 0
	Profile_RESPIRATORY_DISEASE Profile_MedicalConditions = 1
	Profile_AUTOIMMUNE_DISEASE  Profile_MedicalConditions = 2
	Profile_DIABETES            Profile_MedicalConditions = 3
)

var Profile_MedicalConditions_name = map[int32]string{
	0: "HEART_DISEASE",
	1: "RESPIRATORY_DISEASE",
	2: "AUTOIMMUNE_DISEASE",
	3: "DIABETES",
}

var Profile_MedicalConditions_value = map[string]int32{
	"HEART_DISEASE":       0,
	"RESPIRATORY_DISEASE": 1,
	"AUTOIMMUNE_DISEASE":  2,
	"DIABETES":            3,
}

func (x Profile_MedicalConditions) String() string {
	return proto.EnumName(Profile_MedicalConditions_name, int32(x))
}

func (Profile_MedicalConditions) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_152e2e228b8d834b, []int{5, 2}
}

type Contact struct {
	UserId               string               `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ContactWith          *PublicProfile       `protobuf:"bytes,2,opt,name=contact_with,json=contactWith,proto3" json:"contact_with,omitempty"`
	TimeOfContact        *timestamp.Timestamp `protobuf:"bytes,3,opt,name=time_of_contact,json=timeOfContact,proto3" json:"time_of_contact,omitempty"`
	PointOfContact       *Point               `protobuf:"bytes,4,opt,name=point_of_contact,json=pointOfContact,proto3" json:"point_of_contact,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Contact) Reset()         { *m = Contact{} }
func (m *Contact) String() string { return proto.CompactTextString(m) }
func (*Contact) ProtoMessage()    {}
func (*Contact) Descriptor() ([]byte, []int) {
	return fileDescriptor_152e2e228b8d834b, []int{0}
}

func (m *Contact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Contact.Unmarshal(m, b)
}
func (m *Contact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Contact.Marshal(b, m, deterministic)
}
func (m *Contact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Contact.Merge(m, src)
}
func (m *Contact) XXX_Size() int {
	return xxx_messageInfo_Contact.Size(m)
}
func (m *Contact) XXX_DiscardUnknown() {
	xxx_messageInfo_Contact.DiscardUnknown(m)
}

var xxx_messageInfo_Contact proto.InternalMessageInfo

func (m *Contact) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Contact) GetContactWith() *PublicProfile {
	if m != nil {
		return m.ContactWith
	}
	return nil
}

func (m *Contact) GetTimeOfContact() *timestamp.Timestamp {
	if m != nil {
		return m.TimeOfContact
	}
	return nil
}

func (m *Contact) GetPointOfContact() *Point {
	if m != nil {
		return m.PointOfContact
	}
	return nil
}

type Report struct {
	Infection            []*Infection    `protobuf:"bytes,1,rep,name=infection,proto3" json:"infection,omitempty"`
	Recommendation       *Recommendation `protobuf:"bytes,2,opt,name=recommendation,proto3" json:"recommendation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Report) Reset()         { *m = Report{} }
func (m *Report) String() string { return proto.CompactTextString(m) }
func (*Report) ProtoMessage()    {}
func (*Report) Descriptor() ([]byte, []int) {
	return fileDescriptor_152e2e228b8d834b, []int{1}
}

func (m *Report) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Report.Unmarshal(m, b)
}
func (m *Report) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Report.Marshal(b, m, deterministic)
}
func (m *Report) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Report.Merge(m, src)
}
func (m *Report) XXX_Size() int {
	return xxx_messageInfo_Report.Size(m)
}
func (m *Report) XXX_DiscardUnknown() {
	xxx_messageInfo_Report.DiscardUnknown(m)
}

var xxx_messageInfo_Report proto.InternalMessageInfo

func (m *Report) GetInfection() []*Infection {
	if m != nil {
		return m.Infection
	}
	return nil
}

func (m *Report) GetRecommendation() *Recommendation {
	if m != nil {
		return m.Recommendation
	}
	return nil
}

type Infection struct {
	Type                 Infection_Type       `protobuf:"varint,1,opt,name=type,proto3,enum=socialgraph.Infection_Type" json:"type,omitempty"`
	ReportedAt           *timestamp.Timestamp `protobuf:"bytes,2,opt,name=reported_at,json=reportedAt,proto3" json:"reported_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Infection) Reset()         { *m = Infection{} }
func (m *Infection) String() string { return proto.CompactTextString(m) }
func (*Infection) ProtoMessage()    {}
func (*Infection) Descriptor() ([]byte, []int) {
	return fileDescriptor_152e2e228b8d834b, []int{2}
}

func (m *Infection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Infection.Unmarshal(m, b)
}
func (m *Infection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Infection.Marshal(b, m, deterministic)
}
func (m *Infection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Infection.Merge(m, src)
}
func (m *Infection) XXX_Size() int {
	return xxx_messageInfo_Infection.Size(m)
}
func (m *Infection) XXX_DiscardUnknown() {
	xxx_messageInfo_Infection.DiscardUnknown(m)
}

var xxx_messageInfo_Infection proto.InternalMessageInfo

func (m *Infection) GetType() Infection_Type {
	if m != nil {
		return m.Type
	}
	return Infection_CONTACT
}

func (m *Infection) GetReportedAt() *timestamp.Timestamp {
	if m != nil {
		return m.ReportedAt
	}
	return nil
}

type Recommendation struct {
	Risklevel            Recommendation_RiskLevel `protobuf:"varint,1,opt,name=risklevel,proto3,enum=socialgraph.Recommendation_RiskLevel" json:"risklevel,omitempty"`
	Actions              string                   `protobuf:"bytes,2,opt,name=actions,proto3" json:"actions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *Recommendation) Reset()         { *m = Recommendation{} }
func (m *Recommendation) String() string { return proto.CompactTextString(m) }
func (*Recommendation) ProtoMessage()    {}
func (*Recommendation) Descriptor() ([]byte, []int) {
	return fileDescriptor_152e2e228b8d834b, []int{3}
}

func (m *Recommendation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Recommendation.Unmarshal(m, b)
}
func (m *Recommendation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Recommendation.Marshal(b, m, deterministic)
}
func (m *Recommendation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Recommendation.Merge(m, src)
}
func (m *Recommendation) XXX_Size() int {
	return xxx_messageInfo_Recommendation.Size(m)
}
func (m *Recommendation) XXX_DiscardUnknown() {
	xxx_messageInfo_Recommendation.DiscardUnknown(m)
}

var xxx_messageInfo_Recommendation proto.InternalMessageInfo

func (m *Recommendation) GetRisklevel() Recommendation_RiskLevel {
	if m != nil {
		return m.Risklevel
	}
	return Recommendation_LOW
}

func (m *Recommendation) GetActions() string {
	if m != nil {
		return m.Actions
	}
	return ""
}

type Summary struct {
	NumContacts           int32    `protobuf:"varint,1,opt,name=num_contacts,json=numContacts,proto3" json:"num_contacts,omitempty"`
	TotalInfectedContacts int32    `protobuf:"varint,2,opt,name=total_infected_contacts,json=totalInfectedContacts,proto3" json:"total_infected_contacts,omitempty"`
	InfectedContacts      int32    `protobuf:"varint,3,opt,name=infected_contacts,json=infectedContacts,proto3" json:"infected_contacts,omitempty"`
	NumCloseContacts      int32    `protobuf:"varint,4,opt,name=num_close_contacts,json=numCloseContacts,proto3" json:"num_close_contacts,omitempty"`
	InfectedCloseContacts int32    `protobuf:"varint,5,opt,name=infected_close_contacts,json=infectedCloseContacts,proto3" json:"infected_close_contacts,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *Summary) Reset()         { *m = Summary{} }
func (m *Summary) String() string { return proto.CompactTextString(m) }
func (*Summary) ProtoMessage()    {}
func (*Summary) Descriptor() ([]byte, []int) {
	return fileDescriptor_152e2e228b8d834b, []int{4}
}

func (m *Summary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Summary.Unmarshal(m, b)
}
func (m *Summary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Summary.Marshal(b, m, deterministic)
}
func (m *Summary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Summary.Merge(m, src)
}
func (m *Summary) XXX_Size() int {
	return xxx_messageInfo_Summary.Size(m)
}
func (m *Summary) XXX_DiscardUnknown() {
	xxx_messageInfo_Summary.DiscardUnknown(m)
}

var xxx_messageInfo_Summary proto.InternalMessageInfo

func (m *Summary) GetNumContacts() int32 {
	if m != nil {
		return m.NumContacts
	}
	return 0
}

func (m *Summary) GetTotalInfectedContacts() int32 {
	if m != nil {
		return m.TotalInfectedContacts
	}
	return 0
}

func (m *Summary) GetInfectedContacts() int32 {
	if m != nil {
		return m.InfectedContacts
	}
	return 0
}

func (m *Summary) GetNumCloseContacts() int32 {
	if m != nil {
		return m.NumCloseContacts
	}
	return 0
}

func (m *Summary) GetInfectedCloseContacts() int32 {
	if m != nil {
		return m.InfectedCloseContacts
	}
	return 0
}

type Profile struct {
	Id                   string                      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Age                  int32                       `protobuf:"varint,2,opt,name=age,proto3" json:"age,omitempty"`
	AgeGroup             Profile_AgeGroup            `protobuf:"varint,3,opt,name=age_group,json=ageGroup,proto3,enum=socialgraph.Profile_AgeGroup" json:"age_group,omitempty"`
	CovidStatus          Profile_CovidStatus         `protobuf:"varint,4,opt,name=covid_status,json=covidStatus,proto3,enum=socialgraph.Profile_CovidStatus" json:"covid_status,omitempty"`
	MedicalConditions    []Profile_MedicalConditions `protobuf:"varint,5,rep,packed,name=medical_conditions,json=medicalConditions,proto3,enum=socialgraph.Profile_MedicalConditions" json:"medical_conditions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *Profile) Reset()         { *m = Profile{} }
func (m *Profile) String() string { return proto.CompactTextString(m) }
func (*Profile) ProtoMessage()    {}
func (*Profile) Descriptor() ([]byte, []int) {
	return fileDescriptor_152e2e228b8d834b, []int{5}
}

func (m *Profile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Profile.Unmarshal(m, b)
}
func (m *Profile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Profile.Marshal(b, m, deterministic)
}
func (m *Profile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Profile.Merge(m, src)
}
func (m *Profile) XXX_Size() int {
	return xxx_messageInfo_Profile.Size(m)
}
func (m *Profile) XXX_DiscardUnknown() {
	xxx_messageInfo_Profile.DiscardUnknown(m)
}

var xxx_messageInfo_Profile proto.InternalMessageInfo

func (m *Profile) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Profile) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

func (m *Profile) GetAgeGroup() Profile_AgeGroup {
	if m != nil {
		return m.AgeGroup
	}
	return Profile_CHILD
}

func (m *Profile) GetCovidStatus() Profile_CovidStatus {
	if m != nil {
		return m.CovidStatus
	}
	return Profile_NOT_INFECTED
}

func (m *Profile) GetMedicalConditions() []Profile_MedicalConditions {
	if m != nil {
		return m.MedicalConditions
	}
	return nil
}

type PublicProfile struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FirstName            string   `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName             string   `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	MiddleName           string   `protobuf:"bytes,4,opt,name=middle_name,json=middleName,proto3" json:"middle_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublicProfile) Reset()         { *m = PublicProfile{} }
func (m *PublicProfile) String() string { return proto.CompactTextString(m) }
func (*PublicProfile) ProtoMessage()    {}
func (*PublicProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_152e2e228b8d834b, []int{6}
}

func (m *PublicProfile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublicProfile.Unmarshal(m, b)
}
func (m *PublicProfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublicProfile.Marshal(b, m, deterministic)
}
func (m *PublicProfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublicProfile.Merge(m, src)
}
func (m *PublicProfile) XXX_Size() int {
	return xxx_messageInfo_PublicProfile.Size(m)
}
func (m *PublicProfile) XXX_DiscardUnknown() {
	xxx_messageInfo_PublicProfile.DiscardUnknown(m)
}

var xxx_messageInfo_PublicProfile proto.InternalMessageInfo

func (m *PublicProfile) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PublicProfile) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *PublicProfile) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *PublicProfile) GetMiddleName() string {
	if m != nil {
		return m.MiddleName
	}
	return ""
}

type Point struct {
	Latitude             int32    `protobuf:"varint,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude            int32    `protobuf:"varint,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Point) Reset()         { *m = Point{} }
func (m *Point) String() string { return proto.CompactTextString(m) }
func (*Point) ProtoMessage()    {}
func (*Point) Descriptor() ([]byte, []int) {
	return fileDescriptor_152e2e228b8d834b, []int{7}
}

func (m *Point) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Point.Unmarshal(m, b)
}
func (m *Point) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Point.Marshal(b, m, deterministic)
}
func (m *Point) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Point.Merge(m, src)
}
func (m *Point) XXX_Size() int {
	return xxx_messageInfo_Point.Size(m)
}
func (m *Point) XXX_DiscardUnknown() {
	xxx_messageInfo_Point.DiscardUnknown(m)
}

var xxx_messageInfo_Point proto.InternalMessageInfo

func (m *Point) GetLatitude() int32 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *Point) GetLongitude() int32 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func init() {
	proto.RegisterEnum("socialgraph.Infection_Type", Infection_Type_name, Infection_Type_value)
	proto.RegisterEnum("socialgraph.Recommendation_RiskLevel", Recommendation_RiskLevel_name, Recommendation_RiskLevel_value)
	proto.RegisterEnum("socialgraph.Profile_AgeGroup", Profile_AgeGroup_name, Profile_AgeGroup_value)
	proto.RegisterEnum("socialgraph.Profile_CovidStatus", Profile_CovidStatus_name, Profile_CovidStatus_value)
	proto.RegisterEnum("socialgraph.Profile_MedicalConditions", Profile_MedicalConditions_name, Profile_MedicalConditions_value)
	proto.RegisterType((*Contact)(nil), "socialgraph.Contact")
	proto.RegisterType((*Report)(nil), "socialgraph.Report")
	proto.RegisterType((*Infection)(nil), "socialgraph.Infection")
	proto.RegisterType((*Recommendation)(nil), "socialgraph.Recommendation")
	proto.RegisterType((*Summary)(nil), "socialgraph.Summary")
	proto.RegisterType((*Profile)(nil), "socialgraph.Profile")
	proto.RegisterType((*PublicProfile)(nil), "socialgraph.PublicProfile")
	proto.RegisterType((*Point)(nil), "socialgraph.Point")
}

func init() {
	proto.RegisterFile("socialgraph.proto", fileDescriptor_152e2e228b8d834b)
}

var fileDescriptor_152e2e228b8d834b = []byte{
	// 1095 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x56, 0xcb, 0x6e, 0xdb, 0x46,
	0x17, 0x16, 0x75, 0xb1, 0xc4, 0x23, 0x5b, 0x3f, 0x3d, 0xc9, 0x9f, 0x08, 0x4a, 0xd2, 0xa8, 0x44,
	0x5b, 0x18, 0x6d, 0xa1, 0x14, 0x6a, 0xd0, 0x45, 0xd3, 0x02, 0xa1, 0xa9, 0xb1, 0x44, 0x40, 0x17,
	0x63, 0x44, 0xc5, 0xc8, 0x8a, 0xa0, 0xc5, 0x91, 0x4c, 0x84, 0x17, 0x81, 0x1c, 0x39, 0x30, 0xd0,
	0x5d, 0xdf, 0xa1, 0x9b, 0x3e, 0x44, 0x5f, 0x21, 0xef, 0xd2, 0x87, 0xe8, 0xb6, 0x98, 0xe1, 0x45,
	0x17, 0xbb, 0x2e, 0xd2, 0xec, 0x34, 0xe7, 0xfb, 0xce, 0xc7, 0xef, 0xcc, 0x9c, 0x33, 0x23, 0x38,
	0x8e, 0xc3, 0xb9, 0x6b, 0x7b, 0xcb, 0xc8, 0x5e, 0x5d, 0x75, 0x56, 0x51, 0xc8, 0x42, 0x54, 0xdf,
	0x0a, 0xb5, 0x9e, 0x2f, 0xc3, 0x70, 0xe9, 0xd1, 0x17, 0x02, 0xba, 0x5c, 0x2f, 0x5e, 0x30, 0xd7,
	0xa7, 0x31, 0xb3, 0xfd, 0x55, 0xc2, 0x6e, 0x7d, 0xb6, 0x4f, 0x78, 0x1f, 0xd9, 0xab, 0x15, 0x8d,
	0xe2, 0x04, 0x57, 0xff, 0x94, 0xa0, 0xaa, 0x87, 0x01, 0xb3, 0xe7, 0x0c, 0x3d, 0x86, 0xea, 0x3a,
	0xa6, 0x91, 0xe5, 0x3a, 0x4d, 0xa9, 0x2d, 0x9d, 0xc8, 0xe4, 0x80, 0x2f, 0x0d, 0x07, 0xfd, 0x0c,
	0x87, 0xf3, 0x84, 0x63, 0xbd, 0x77, 0xd9, 0x55, 0xb3, 0xd8, 0x96, 0x4e, 0xea, 0xdd, 0x56, 0x67,
	0xdb, 0xdc, 0xf9, 0xfa, 0xd2, 0x73, 0xe7, 0xe7, 0x51, 0xb8, 0x70, 0x3d, 0x4a, 0xea, 0x29, 0xff,
	0xc2, 0x65, 0x57, 0xe8, 0x14, 0xfe, 0xc7, 0x6d, 0x59, 0xe1, 0xc2, 0x4a, 0xc3, 0xcd, 0x52, 0xaa,
	0x90, 0xb8, 0xeb, 0x64, 0xee, 0x3a, 0x66, 0x66, 0x9f, 0x1c, 0xf1, 0x94, 0xc9, 0x22, 0xf3, 0xf6,
	0x13, 0x28, 0xab, 0xd0, 0x0d, 0xd8, 0xb6, 0x48, 0x59, 0x88, 0xa0, 0x5d, 0x1b, 0x9c, 0x44, 0x1a,
	0x82, 0x9b, 0x67, 0xab, 0xbf, 0x4a, 0x70, 0x40, 0xe8, 0x2a, 0x8c, 0x18, 0x7a, 0x09, 0xb2, 0x1b,
	0x2c, 0xe8, 0x9c, 0xb9, 0x61, 0xd0, 0x94, 0xda, 0xa5, 0x93, 0x7a, 0xf7, 0xd1, 0x8e, 0x82, 0x91,
	0xa1, 0x64, 0x43, 0x44, 0x3a, 0x34, 0x22, 0x3a, 0x0f, 0x7d, 0x9f, 0x06, 0x8e, 0x2d, 0x52, 0x93,
	0x3d, 0x78, 0xb2, 0x93, 0x4a, 0x76, 0x28, 0x64, 0x2f, 0x45, 0xfd, 0x43, 0x02, 0x39, 0x57, 0x47,
	0x2f, 0xa0, 0xcc, 0x6e, 0x56, 0x54, 0x6c, 0x75, 0x63, 0x4f, 0x28, 0x67, 0x75, 0xcc, 0x9b, 0x15,
	0x25, 0x82, 0x88, 0x5e, 0x41, 0x3d, 0x12, 0x35, 0x50, 0xc7, 0xb2, 0x59, 0x7e, 0x08, 0xff, 0xbc,
	0x85, 0x90, 0xd1, 0x35, 0xa6, 0xbe, 0x84, 0x32, 0x97, 0x42, 0x75, 0xa8, 0xea, 0x93, 0xb1, 0xa9,
	0xe9, 0xa6, 0x52, 0x40, 0xc7, 0x70, 0xa4, 0x0f, 0x27, 0x53, 0x6c, 0x65, 0x21, 0x09, 0x1d, 0x42,
	0xcd, 0x18, 0xf7, 0x0c, 0x82, 0x75, 0x53, 0x29, 0xaa, 0xbf, 0x4b, 0xd0, 0xd8, 0x2d, 0x0a, 0xe9,
	0x20, 0x47, 0x6e, 0xfc, 0xce, 0xa3, 0xd7, 0xd4, 0x4b, 0xbd, 0x7f, 0x79, 0xcf, 0x26, 0x74, 0x88,
	0x1b, 0xbf, 0x1b, 0x72, 0x32, 0xd9, 0xe4, 0xa1, 0x26, 0x54, 0x6d, 0x51, 0x5f, 0x2c, 0xca, 0x90,
	0x49, 0xb6, 0x54, 0xbf, 0x06, 0x39, 0xcf, 0x40, 0x55, 0x28, 0x0d, 0x27, 0x17, 0x4a, 0x01, 0x01,
	0x1c, 0x8c, 0x70, 0xcf, 0x98, 0x8d, 0x14, 0x09, 0xd5, 0xa0, 0x3c, 0x30, 0xfa, 0x03, 0xa5, 0xa8,
	0xfe, 0x25, 0x41, 0x75, 0xba, 0xf6, 0x7d, 0x3b, 0xba, 0x41, 0x9f, 0xc3, 0x61, 0xb0, 0xf6, 0xb3,
	0xd6, 0x88, 0x85, 0xb3, 0x0a, 0xa9, 0x07, 0x6b, 0x3f, 0xed, 0x81, 0x18, 0xfd, 0x00, 0x8f, 0x59,
	0xc8, 0x6c, 0xcf, 0x4a, 0x8e, 0x95, 0x3a, 0x1b, 0x76, 0x51, 0xb0, 0xff, 0x2f, 0x60, 0x23, 0x45,
	0xf3, 0xbc, 0x6f, 0xe0, 0xf8, 0x76, 0x46, 0x49, 0x64, 0x28, 0xee, 0x3e, 0xf9, 0x5b, 0x40, 0xc2,
	0x87, 0x17, 0xc6, 0x74, 0xc3, 0x2e, 0x27, 0x6c, 0xee, 0x86, 0x03, 0xdb, 0x96, 0x36, 0xd2, 0xbb,
	0x29, 0x95, 0xc4, 0x52, 0xfe, 0x81, 0xed, 0x3c, 0xf5, 0x43, 0x19, 0xaa, 0xe9, 0xa8, 0xa1, 0x06,
	0x14, 0xf3, 0x81, 0x2d, 0xba, 0x0e, 0x52, 0xa0, 0x64, 0x2f, 0x69, 0x5a, 0x12, 0xff, 0x89, 0x7e,
	0x04, 0xd9, 0x5e, 0x52, 0x6b, 0x19, 0x85, 0xeb, 0x95, 0x30, 0xde, 0xe8, 0x3e, 0xdb, 0x1d, 0x9a,
	0x44, 0xaa, 0xa3, 0x2d, 0x69, 0x9f, 0x93, 0x48, 0xcd, 0x4e, 0x7f, 0x21, 0x9d, 0x8f, 0xfe, 0xb5,
	0xeb, 0x58, 0x31, 0xb3, 0xd9, 0x3a, 0xa9, 0xa4, 0xd1, 0x6d, 0xdf, 0x99, 0xae, 0x73, 0xe2, 0x54,
	0xf0, 0xf8, 0x05, 0x90, 0x2f, 0xd0, 0x0c, 0x90, 0x4f, 0x1d, 0x77, 0x6e, 0x7b, 0xbc, 0x3e, 0xc7,
	0x4d, 0x4e, 0xbe, 0xd2, 0x2e, 0x9d, 0x34, 0xba, 0x5f, 0xdd, 0x29, 0x35, 0x4a, 0xe8, 0x7a, 0xce,
	0x26, 0xc7, 0xfe, 0x7e, 0x48, 0xfd, 0x4d, 0x82, 0x5a, 0x66, 0x19, 0xc9, 0x50, 0xd1, 0x07, 0xc6,
	0xb0, 0xa7, 0x14, 0x78, 0x0f, 0x9b, 0x18, 0x8f, 0xb5, 0x3e, 0x26, 0x8a, 0x84, 0x9a, 0xf0, 0xf0,
	0xed, 0x64, 0x36, 0xee, 0x5b, 0x5a, 0x6f, 0x36, 0x34, 0x2d, 0xf3, 0x02, 0x8f, 0x4d, 0x03, 0x4f,
	0x95, 0xe2, 0x2d, 0x64, 0x60, 0x10, 0x81, 0x94, 0x38, 0x32, 0x32, 0x7a, 0xbd, 0x21, 0xb6, 0xb4,
	0x3e, 0xee, 0x59, 0x67, 0x93, 0x59, 0x82, 0x94, 0xd1, 0x63, 0x78, 0xb0, 0x83, 0x18, 0x67, 0x02,
	0xa8, 0xf0, 0x16, 0x9d, 0xe2, 0xb1, 0x31, 0x21, 0xca, 0x81, 0xfa, 0x0a, 0xea, 0x5b, 0x7b, 0x81,
	0x14, 0x38, 0x1c, 0x4f, 0x4c, 0xcb, 0x18, 0x9f, 0x61, 0xdd, 0xc4, 0xa9, 0xc3, 0x7c, 0x25, 0x66,
	0x8e, 0x60, 0x7d, 0xf2, 0x06, 0x93, 0x9e, 0x52, 0x54, 0x29, 0x1c, 0xdf, 0xaa, 0x9e, 0x4f, 0xea,
	0x00, 0x6b, 0xc4, 0xb4, 0x7a, 0xc6, 0x14, 0x6b, 0x53, 0xac, 0x14, 0xb8, 0x13, 0x82, 0xa7, 0xe7,
	0x06, 0xd1, 0xcc, 0x09, 0x79, 0x9b, 0x03, 0x12, 0x7a, 0x04, 0x48, 0x9b, 0x99, 0x13, 0x63, 0x34,
	0x9a, 0x8d, 0x71, 0x1e, 0x2f, 0xf2, 0xcf, 0xf4, 0x0c, 0xed, 0x14, 0x9b, 0xbc, 0x44, 0xf5, 0x17,
	0x38, 0xda, 0xb9, 0xb2, 0x6f, 0xf5, 0xd1, 0x33, 0x80, 0x85, 0x1b, 0xc5, 0xcc, 0x0a, 0x6c, 0x9f,
	0xa6, 0x63, 0x2a, 0x8b, 0xc8, 0xd8, 0xf6, 0x29, 0x7a, 0x02, 0xb2, 0x67, 0x67, 0x68, 0x49, 0xa0,
	0x35, 0x1e, 0x10, 0xe0, 0x73, 0xa8, 0xfb, 0xae, 0xe3, 0x78, 0x34, 0x81, 0xcb, 0x02, 0x86, 0x24,
	0xc4, 0x09, 0xaa, 0x06, 0x15, 0x71, 0x53, 0xa3, 0x16, 0xd4, 0x3c, 0x9b, 0xb9, 0x6c, 0xed, 0xd0,
	0x74, 0x66, 0xf3, 0x35, 0x7a, 0x0a, 0xb2, 0x17, 0x06, 0xcb, 0x04, 0x4c, 0xfa, 0x79, 0x13, 0xe8,
	0x7e, 0xa8, 0x40, 0x7d, 0x2a, 0x5a, 0xa7, 0xcf, 0x5b, 0x07, 0x9d, 0x02, 0xf4, 0x29, 0xcb, 0xaa,
	0x79, 0x7a, 0xeb, 0x5e, 0x9c, 0xb2, 0xc8, 0x0d, 0x96, 0x6f, 0x6c, 0x6f, 0x4d, 0x5b, 0x0f, 0xef,
	0x6a, 0x3a, 0xb5, 0xc0, 0x35, 0x34, 0xc7, 0xc9, 0x34, 0xee, 0x64, 0xb5, 0xee, 0x55, 0x56, 0x0b,
	0x08, 0xc3, 0xd1, 0x6c, 0xe5, 0xd8, 0x8c, 0x7e, 0xaa, 0x4c, 0xbd, 0x4f, 0x59, 0x7e, 0x53, 0x7c,
	0x4c, 0x3d, 0xd9, 0xab, 0x57, 0xf8, 0x4e, 0x42, 0xaf, 0x45, 0x45, 0xd9, 0x2b, 0x7a, 0x27, 0xaf,
	0x75, 0xcf, 0x43, 0x2e, 0xf6, 0xa4, 0xd6, 0xa7, 0xec, 0x34, 0x0c, 0x9c, 0xff, 0xee, 0x02, 0x43,
	0x55, 0x73, 0x1c, 0xae, 0xf1, 0x2f, 0x12, 0xf7, 0x5b, 0x19, 0x00, 0xf4, 0xa8, 0x47, 0x19, 0xfd,
	0x64, 0xa5, 0xd7, 0x20, 0xf7, 0x29, 0x4b, 0xff, 0x12, 0xdc, 0x2f, 0xf4, 0x60, 0xef, 0x75, 0xe3,
	0x29, 0x49, 0xab, 0xf4, 0x29, 0xcb, 0x9e, 0x9f, 0x8f, 0xd9, 0x98, 0x34, 0x47, 0x2d, 0x9c, 0x7e,
	0x01, 0x6d, 0x37, 0x58, 0x84, 0x1d, 0x71, 0x57, 0x5e, 0xad, 0x2f, 0x3b, 0x31, 0x8d, 0xae, 0x69,
	0xb4, 0xcd, 0x3e, 0x97, 0x2e, 0x0f, 0x84, 0xe6, 0xf7, 0x7f, 0x07, 0x00, 0x00, 0xff, 0xff, 0x71,
	0x47, 0x2e, 0x69, 0x0c, 0x0a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SocialGraphClient is the client API for SocialGraph service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SocialGraphClient interface {
	GetProfile(ctx context.Context, in *wrappers.StringValue, opts ...grpc.CallOption) (*Profile, error)
	AddProfile(ctx context.Context, in *Profile, opts ...grpc.CallOption) (*wrappers.StringValue, error)
	UpdateProfile(ctx context.Context, in *Profile, opts ...grpc.CallOption) (*wrappers.StringValue, error)
	GetContacts(ctx context.Context, in *wrappers.StringValue, opts ...grpc.CallOption) (SocialGraph_GetContactsClient, error)
	AddContact(ctx context.Context, in *Contact, opts ...grpc.CallOption) (*PublicProfile, error)
	GetBonds(ctx context.Context, in *wrappers.StringValue, opts ...grpc.CallOption) (SocialGraph_GetBondsClient, error)
	AddBond(ctx context.Context, in *wrappers.StringValue, opts ...grpc.CallOption) (*PublicProfile, error)
	DeleteBond(ctx context.Context, in *wrappers.StringValue, opts ...grpc.CallOption) (*PublicProfile, error)
	GetReport(ctx context.Context, in *wrappers.StringValue, opts ...grpc.CallOption) (*Report, error)
	GetSummary(ctx context.Context, in *wrappers.StringValue, opts ...grpc.CallOption) (*Summary, error)
}

type socialGraphClient struct {
	cc grpc.ClientConnInterface
}

func NewSocialGraphClient(cc grpc.ClientConnInterface) SocialGraphClient {
	return &socialGraphClient{cc}
}

func (c *socialGraphClient) GetProfile(ctx context.Context, in *wrappers.StringValue, opts ...grpc.CallOption) (*Profile, error) {
	out := new(Profile)
	err := c.cc.Invoke(ctx, "/socialgraph.SocialGraph/GetProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *socialGraphClient) AddProfile(ctx context.Context, in *Profile, opts ...grpc.CallOption) (*wrappers.StringValue, error) {
	out := new(wrappers.StringValue)
	err := c.cc.Invoke(ctx, "/socialgraph.SocialGraph/AddProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *socialGraphClient) UpdateProfile(ctx context.Context, in *Profile, opts ...grpc.CallOption) (*wrappers.StringValue, error) {
	out := new(wrappers.StringValue)
	err := c.cc.Invoke(ctx, "/socialgraph.SocialGraph/UpdateProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *socialGraphClient) GetContacts(ctx context.Context, in *wrappers.StringValue, opts ...grpc.CallOption) (SocialGraph_GetContactsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SocialGraph_serviceDesc.Streams[0], "/socialgraph.SocialGraph/GetContacts", opts...)
	if err != nil {
		return nil, err
	}
	x := &socialGraphGetContactsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SocialGraph_GetContactsClient interface {
	Recv() (*Contact, error)
	grpc.ClientStream
}

type socialGraphGetContactsClient struct {
	grpc.ClientStream
}

func (x *socialGraphGetContactsClient) Recv() (*Contact, error) {
	m := new(Contact)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *socialGraphClient) AddContact(ctx context.Context, in *Contact, opts ...grpc.CallOption) (*PublicProfile, error) {
	out := new(PublicProfile)
	err := c.cc.Invoke(ctx, "/socialgraph.SocialGraph/AddContact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *socialGraphClient) GetBonds(ctx context.Context, in *wrappers.StringValue, opts ...grpc.CallOption) (SocialGraph_GetBondsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SocialGraph_serviceDesc.Streams[1], "/socialgraph.SocialGraph/GetBonds", opts...)
	if err != nil {
		return nil, err
	}
	x := &socialGraphGetBondsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SocialGraph_GetBondsClient interface {
	Recv() (*Contact, error)
	grpc.ClientStream
}

type socialGraphGetBondsClient struct {
	grpc.ClientStream
}

func (x *socialGraphGetBondsClient) Recv() (*Contact, error) {
	m := new(Contact)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *socialGraphClient) AddBond(ctx context.Context, in *wrappers.StringValue, opts ...grpc.CallOption) (*PublicProfile, error) {
	out := new(PublicProfile)
	err := c.cc.Invoke(ctx, "/socialgraph.SocialGraph/AddBond", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *socialGraphClient) DeleteBond(ctx context.Context, in *wrappers.StringValue, opts ...grpc.CallOption) (*PublicProfile, error) {
	out := new(PublicProfile)
	err := c.cc.Invoke(ctx, "/socialgraph.SocialGraph/DeleteBond", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *socialGraphClient) GetReport(ctx context.Context, in *wrappers.StringValue, opts ...grpc.CallOption) (*Report, error) {
	out := new(Report)
	err := c.cc.Invoke(ctx, "/socialgraph.SocialGraph/GetReport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *socialGraphClient) GetSummary(ctx context.Context, in *wrappers.StringValue, opts ...grpc.CallOption) (*Summary, error) {
	out := new(Summary)
	err := c.cc.Invoke(ctx, "/socialgraph.SocialGraph/GetSummary", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SocialGraphServer is the server API for SocialGraph service.
type SocialGraphServer interface {
	GetProfile(context.Context, *wrappers.StringValue) (*Profile, error)
	AddProfile(context.Context, *Profile) (*wrappers.StringValue, error)
	UpdateProfile(context.Context, *Profile) (*wrappers.StringValue, error)
	GetContacts(*wrappers.StringValue, SocialGraph_GetContactsServer) error
	AddContact(context.Context, *Contact) (*PublicProfile, error)
	GetBonds(*wrappers.StringValue, SocialGraph_GetBondsServer) error
	AddBond(context.Context, *wrappers.StringValue) (*PublicProfile, error)
	DeleteBond(context.Context, *wrappers.StringValue) (*PublicProfile, error)
	GetReport(context.Context, *wrappers.StringValue) (*Report, error)
	GetSummary(context.Context, *wrappers.StringValue) (*Summary, error)
}

// UnimplementedSocialGraphServer can be embedded to have forward compatible implementations.
type UnimplementedSocialGraphServer struct {
}

func (*UnimplementedSocialGraphServer) GetProfile(ctx context.Context, req *wrappers.StringValue) (*Profile, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProfile not implemented")
}
func (*UnimplementedSocialGraphServer) AddProfile(ctx context.Context, req *Profile) (*wrappers.StringValue, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddProfile not implemented")
}
func (*UnimplementedSocialGraphServer) UpdateProfile(ctx context.Context, req *Profile) (*wrappers.StringValue, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateProfile not implemented")
}
func (*UnimplementedSocialGraphServer) GetContacts(req *wrappers.StringValue, srv SocialGraph_GetContactsServer) error {
	return status.Errorf(codes.Unimplemented, "method GetContacts not implemented")
}
func (*UnimplementedSocialGraphServer) AddContact(ctx context.Context, req *Contact) (*PublicProfile, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddContact not implemented")
}
func (*UnimplementedSocialGraphServer) GetBonds(req *wrappers.StringValue, srv SocialGraph_GetBondsServer) error {
	return status.Errorf(codes.Unimplemented, "method GetBonds not implemented")
}
func (*UnimplementedSocialGraphServer) AddBond(ctx context.Context, req *wrappers.StringValue) (*PublicProfile, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddBond not implemented")
}
func (*UnimplementedSocialGraphServer) DeleteBond(ctx context.Context, req *wrappers.StringValue) (*PublicProfile, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteBond not implemented")
}
func (*UnimplementedSocialGraphServer) GetReport(ctx context.Context, req *wrappers.StringValue) (*Report, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetReport not implemented")
}
func (*UnimplementedSocialGraphServer) GetSummary(ctx context.Context, req *wrappers.StringValue) (*Summary, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSummary not implemented")
}

func RegisterSocialGraphServer(s *grpc.Server, srv SocialGraphServer) {
	s.RegisterService(&_SocialGraph_serviceDesc, srv)
}

func _SocialGraph_GetProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(wrappers.StringValue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SocialGraphServer).GetProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/socialgraph.SocialGraph/GetProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SocialGraphServer).GetProfile(ctx, req.(*wrappers.StringValue))
	}
	return interceptor(ctx, in, info, handler)
}

func _SocialGraph_AddProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Profile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SocialGraphServer).AddProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/socialgraph.SocialGraph/AddProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SocialGraphServer).AddProfile(ctx, req.(*Profile))
	}
	return interceptor(ctx, in, info, handler)
}

func _SocialGraph_UpdateProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Profile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SocialGraphServer).UpdateProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/socialgraph.SocialGraph/UpdateProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SocialGraphServer).UpdateProfile(ctx, req.(*Profile))
	}
	return interceptor(ctx, in, info, handler)
}

func _SocialGraph_GetContacts_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(wrappers.StringValue)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SocialGraphServer).GetContacts(m, &socialGraphGetContactsServer{stream})
}

type SocialGraph_GetContactsServer interface {
	Send(*Contact) error
	grpc.ServerStream
}

type socialGraphGetContactsServer struct {
	grpc.ServerStream
}

func (x *socialGraphGetContactsServer) Send(m *Contact) error {
	return x.ServerStream.SendMsg(m)
}

func _SocialGraph_AddContact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Contact)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SocialGraphServer).AddContact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/socialgraph.SocialGraph/AddContact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SocialGraphServer).AddContact(ctx, req.(*Contact))
	}
	return interceptor(ctx, in, info, handler)
}

func _SocialGraph_GetBonds_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(wrappers.StringValue)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SocialGraphServer).GetBonds(m, &socialGraphGetBondsServer{stream})
}

type SocialGraph_GetBondsServer interface {
	Send(*Contact) error
	grpc.ServerStream
}

type socialGraphGetBondsServer struct {
	grpc.ServerStream
}

func (x *socialGraphGetBondsServer) Send(m *Contact) error {
	return x.ServerStream.SendMsg(m)
}

func _SocialGraph_AddBond_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(wrappers.StringValue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SocialGraphServer).AddBond(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/socialgraph.SocialGraph/AddBond",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SocialGraphServer).AddBond(ctx, req.(*wrappers.StringValue))
	}
	return interceptor(ctx, in, info, handler)
}

func _SocialGraph_DeleteBond_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(wrappers.StringValue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SocialGraphServer).DeleteBond(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/socialgraph.SocialGraph/DeleteBond",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SocialGraphServer).DeleteBond(ctx, req.(*wrappers.StringValue))
	}
	return interceptor(ctx, in, info, handler)
}

func _SocialGraph_GetReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(wrappers.StringValue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SocialGraphServer).GetReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/socialgraph.SocialGraph/GetReport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SocialGraphServer).GetReport(ctx, req.(*wrappers.StringValue))
	}
	return interceptor(ctx, in, info, handler)
}

func _SocialGraph_GetSummary_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(wrappers.StringValue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SocialGraphServer).GetSummary(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/socialgraph.SocialGraph/GetSummary",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SocialGraphServer).GetSummary(ctx, req.(*wrappers.StringValue))
	}
	return interceptor(ctx, in, info, handler)
}

var _SocialGraph_serviceDesc = grpc.ServiceDesc{
	ServiceName: "socialgraph.SocialGraph",
	HandlerType: (*SocialGraphServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetProfile",
			Handler:    _SocialGraph_GetProfile_Handler,
		},
		{
			MethodName: "AddProfile",
			Handler:    _SocialGraph_AddProfile_Handler,
		},
		{
			MethodName: "UpdateProfile",
			Handler:    _SocialGraph_UpdateProfile_Handler,
		},
		{
			MethodName: "AddContact",
			Handler:    _SocialGraph_AddContact_Handler,
		},
		{
			MethodName: "AddBond",
			Handler:    _SocialGraph_AddBond_Handler,
		},
		{
			MethodName: "DeleteBond",
			Handler:    _SocialGraph_DeleteBond_Handler,
		},
		{
			MethodName: "GetReport",
			Handler:    _SocialGraph_GetReport_Handler,
		},
		{
			MethodName: "GetSummary",
			Handler:    _SocialGraph_GetSummary_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetContacts",
			Handler:       _SocialGraph_GetContacts_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetBonds",
			Handler:       _SocialGraph_GetBonds_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "socialgraph.proto",
}
